name: CICD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  
    - uses: actions/upload-artifact@v4
      with:
        name: Boardgame
        path: target/*.jar
    
    - name: install trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy
      
    - name: Trivy FS Sacn
      run: |
        trivy fs --format table -o fs.html .
        
    - name: Sonarqube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: -X -Dsonar.ws.timeout=60
        
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
        
    - name: SonarQube Quality Gate Check
      id: sonarqube-quality-gate-check
      uses: SonarSource/sonarqube-quality-gate-action@v1
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t palanipsb/boardgame:latest .
    
    - name: Trivy Image Sacn 
      run: |
        trivy image --format table -o trivy-image-report.html palanipsb/boardgame:latest
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Docker Push Image
      run: |
        docker push palanipsb/boardgame:latest
        
    - name: Azure Login
      uses: Azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Kubernetes Set Context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: rg_web-app
        cluster-name: aks-gitactions-proj

    - name: Create secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v4.0
      with:
        namespace: dev
        container-registry-url: https://index.docker.io/v1/
        container-registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
        container-registry-password:  ${{ secrets.DOCKERHUB_TOKEN }}
        secret-type: docker-registry
        secret-name: docker-image-pull-secret

    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4
      with:
        manifests: |
          deployment-service.yaml
        images: palanipsb/boardgame:latest
        imagepullsecrets: docker-image-pull-secret
        action: deploy
        
        
        
        
        
        
        
            
